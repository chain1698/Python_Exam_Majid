# eda_analysis.py
# Complete EDA, processing, visualization, and code commenting for CHEMALI Majid dataset

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 1. Load
#    Make sure CHEMALI Majid.csv is in the same folder as this script
df = pd.read_csv(r"C:\Users\Majid\Desktop\python now\part 2\CHEMALI Majid.csv")

# 2. Exploratory Data Analysis
print("=== First 5 rows ===")
print(df.head(), "\n")

print("=== Info (types & non-null counts) ===")
print(df.info(), "\n")

print("=== Statistical summary (numeric columns) ===")
print(df.describe(), "\n")

print("=== Missing values per column ===")
print(df.isnull().sum(), "\n")

print("=== Unique values per column ===")
print(df.nunique(), "\n")

# 3. Data Processing / Cleaning
# Fill any missing Gender with "Unknown"
df['Gender'] = df['Gender'].fillna("Unknown")

# 4 & 5. Visualisations (at least 5 charts) with clear titles and labels

# Chart 1: Customer Age Distribution
plt.figure(figsize=(8, 5))
sns.histplot(df['Age'], bins=30, kde=True)
plt.title("Chart 1: Customer Age Distribution")
plt.xlabel("Age")
plt.ylabel("Frequency")
plt.tight_layout()
plt.savefig("chart1_age_distribution.png")
plt.show()

# Chart 2: Order Status Frequency
plt.figure(figsize=(8, 5))
sns.countplot(x='Order Status', data=df)
plt.title("Chart 2: Order Status Frequency")
plt.xlabel("Order Status")
plt.ylabel("Count")
plt.tight_layout()
plt.savefig("chart2_order_status_count.png")
plt.show()

# Chart 3: Average Total Price by Product Type
plt.figure(figsize=(10, 6))
sns.barplot(
    x='Product Type',
    y='Total Price',
    data=df,
    estimator='mean'
)
plt.title("Chart 3: Average Total Price by Product Type")
plt.xlabel("Product Type")
plt.ylabel("Average Total Price")
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig("chart3_avg_price_by_product.png")
plt.show()

# Chart 4: Quantity Ordered by Gender
plt.figure(figsize=(8, 5))
sns.boxplot(x='Gender', y='Quantity', data=df)
plt.title("Chart 4: Quantity Ordered by Gender")
plt.xlabel("Gender")
plt.ylabel("Quantity")
plt.tight_layout()
plt.savefig("chart4_quantity_by_gender.png")
plt.show()

# Chart 5: Correlation Heatmap of Numeric Features
plt.figure(figsize=(12, 8))
numeric_df = df.select_dtypes(include=['int64', 'float64'])
sns.heatmap(numeric_df.corr(), annot=True, cmap='coolwarm')
plt.title("Chart 5: Correlation Heatmap of Numeric Features")
plt.tight_layout()
plt.savefig("chart5_correlation_heatmap.png")
plt.show()


